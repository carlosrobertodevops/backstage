services:
  postgres:
    image: postgres
    restart: always
    container_name: backstage_db
    env_file:
      - .env
    environment:
      # POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backstage_network

  backstage:
    # image: carlosrobertodevops/backstage:1.0.2
    build:
      context: .
      dockerfile: Dockerfile
    # platforms:
    #   - linux/amd64
    #   - linux/arm64
    container_name: backstage_app
    env_file:
      - .env
    environment:
      BASEURL_LOCAL: ${BASEURL_LOCAL}
      BASEURL_LOCAL_APP: ${BASEURL_LOCAL_APP}
      BASEURL_LOCAL_BACKEND: ${BASEURL_LOCAL_BACKEND}
      BASEURL_PROD: ${BASEURL_PROD}
      BASEURL_PROD_CALLBACK: ${BASEURL_PROD_CALLBACK}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      SONARQUBE_TOKEN: ${SONARQUBE_TOKEN}
      TECHDOCS_BUCKET: ${TECHDOCS_BUCKET}
      AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      AUTH_GITHUB_CLIENT_ID_DEV: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET_DEV: ${AUTH_GITHUB_CLIENT_SECRET}
      AUTH_GITHUB_CLIENT_ID_PRD: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET_PRD: ${AUTH_GITHUB_CLIENT_SECRET}
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
      CATALOG_APP_CONFIG: ${CATALOG_APP_CONFIG}
      CATALOG_ENTITIES_URL: ${CATALOG_ENTITIES_URL}
      CATALOG_TEMPLATE_URL: ${CATALOG_TEMPLATE_URL}
      CATALOG_LOCATIONS_URL: ${CATALOG_LOCATIONS_URL}
      CATALOG_ORG_URL: ${CATALOG_ORG_URL}
      CATALOG_GROUP_URL: ${CATALOG_GROUP_URL}
    ports:
      - '${PORT_APP}:${PORT_APP}'
      - '${PORT_BACKEND}:${PORT_BACKEND}'
    depends_on:
      - postgres
    networks:
      - backstage_network

volumes:
  postgres-data:

networks:
  backstage_network:
    driver: bridge
