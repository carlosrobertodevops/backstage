services:
  db:
    image: postgres
    restart: always
    container_name: backstage_db
    env_file:
      - .env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backstage_app
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SONARQUBE_TOKEN: ${SONARQUBE_TOKEN}
      TECHDOCS_BUCKET: ${TECHDOCS_BUCKET}
      AWS_ACCOUNT_ID: ${AWS_ACCOUNT_ID}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET}
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
      CATALOG_APP_CONFIG: ${CATALOG_APP_CONFIG}
      CATALOG_ENTITIES_URL: ${CATALOG_ENTITIES_URL}
      CATALOG_TEMPLATE_URL: ${CATALOG_TEMPLATE_URL}
      CATALOG_LOCATIONS_URL: ${CATALOG_LOCATIONS_URL}
      CATALOG_ORG_URL: ${CATALOG_ORG_URL}
      CATALOG_GROUP_URL: ${CATALOG_GROUP_URL}
    ports:
      - '${PORT_APP}:${PORT_APP}'
      - '${PORT_BACKEND}:${PORT_BACKEND}'
    depends_on:
      - db

volumes:
  postgres-data:
